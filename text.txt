stage('Nexus IQ Policy Evaluation') {
  steps {
    // （可選）將 GitLab 狀態標成進行中
    script { if (currentBuild.rawBuild) { try { updateGitlabCommitStatus name: 'Nexus IQ', state: 'pending' } catch(ignore){} } }
    
    // 進行 IQ 掃描
    nexusPolicyEvaluation(
      advancedProperties: '',                 // 需要額外 CLI 參數時再填
      enableDebugLogging: false,              // 除錯時可改 true
      failBuildOnNetworkError: false,         // 網路錯誤是否讓建置失敗（視你的策略調整）
      iqApplication: selectedApplication('webgoat'), // 或直接給字串 'webgoat'
      iqInstanceId: 'sonatype-dev',           // 在 Manage Jenkins > System 設定的 IQ Instance ID
      iqStage: 'build',                       // 可用：build / stage-release / release
      jobCredentialsId: 'sonatype-lifecycle-scan', // Jenkins Credentials（IQ 的帳密或 Token）
      // 新版參數名稱為 scanPatterns（舊版是 iqScanPatterns）
      scanPatterns: [
        [scanPattern: '**/target/*.jar'],
        [scanPattern: '**/target/*.war']      // 若不用 war，移除此列
      ]
    )
  }
  post {
    success {
      script { if (currentBuild.rawBuild) { try { updateGitlabCommitStatus name: 'Nexus IQ', state: 'success' } catch(ignore){} } }
      echo 'Nexus IQ 掃描完成（符合政策或允許通過）。'
    }
    unstable {
      script { if (currentBuild.rawBuild) { try { updateGitlabCommitStatus name: 'Nexus IQ', state: 'failed' } catch(ignore){} } }
      echo 'Nexus IQ 掃描結果為 Unstable（請查看政策違反細節）。'
    }
    failure {
      script { if (currentBuild.rawBuild) { try { updateGitlabCommitStatus name: 'Nexus IQ', state: 'failed' } catch(ignore){} } }
      echo 'Nexus IQ 掃描失敗，請檢查 Jenkins 日誌與 IQ 伺服器。'
    }
  }
}